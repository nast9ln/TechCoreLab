package org.example.dao;

import java.util.Optional;

/**
 * Общий интерфейс для доступа к данным с базовыми операциями CRUD.
 *
 * @param <K> Тип ключа сущности.
 * @param <E> Тип сущности.
 */
public interface BaseDao<K, E> {

    /**
     * Сохраняет сущность в базе данных.
     *
     * @param entity сущность для сохранения.
     * @return сохранённая сущность.
     */
    E save(E entity);

    /**
     * Обновляет существующую сущность в базе данных.
     *
     * @param entity сущность для обновления.
     * @return обновлённая сущность.
     */
    E update(E entity);

    /**
     * Ищет сущность по её идентификатору.
     *
     * @param id идентификатор сущности для поиска.
     * @return Optional объект, содержащий найденную сущность или пустой, если сущность не найдена.
     */
    Optional<E> findById(K id);

    /**
     * Удаляет сущность по её идентификатору.
     *
     * @param id идентификатор сущности, которую нужно удалить.
     */
    void delete(K id);
}
